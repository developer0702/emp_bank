---
name: hcc-k8s-helm-deploy
permissions:
  actions: read
  contents: write
  pull-requests: read
"on":
  workflow_dispatch:
    inputs:
      target-env:
        description: Target environment to deploy to
        required: true
        type: environment
        default: dev
      release-name:
        description: Release name of the service
        required: false
        type: string
        default: ob-core-employer-details-api
      image-tag:
        description: Docker Image tag to pull and deploy
        required: true
        type: string
        default: v0.0.1
      chart-version:
        description: Helm chart version to pull and deploy
        required: true
        type: string
        default: 0.0.3
concurrency:
  group: "${{ github.workflow }}-${{ github.event.pull_request.number || github.ref\
    \ }}"
  cancel-in-progress: true
env:
  HELM_LOCAL_REPO_URL: https://repo1.uhc.com/artifactory/helm-local/optum-ob-core-helm/
jobs:
  deploy:
    environment: "${{inputs.target-env}}"
    runs-on: uhg-runner
    steps:
    - name: checkout out repository code
      uses: actions/checkout@v4
    - name: Check target env
      id: check-target-env
      shell: bash
      run: |
        echo "target env is: ${{ inputs.target-env }}"
        if [[ "${{ inputs.target-env }}" == "stage" ]] || [[ "${{ inputs.target-env }}" == "prod" ]]; then
          echo "Dual region deploy required for ELR and CTC clusters."
          echo "dual_region=true" >> $GITHUB_OUTPUT
        else
          echo "Single region deployment to ELR cluster."
          echo "dual_region=false" >> $GITHUB_OUTPUT
        fi
    - name: Setup and Install Helm Charts for ELR
      uses: ./.github/templates/helm-setup-and-install
      with:
        kube-context: "${{ secrets.KUBE_CONTEXT_ELR }}"
        datacenter: elr
        target-env: "${{ inputs.target-env }}"
        k8s-namespace: "${{ vars.K8S_NAMESPACE }}"
        release-name: "${{ inputs.release-name }}"
        image-tag: "${{ inputs.image-tag }}"
        chart-version: "${{ inputs.chart-version }}"
        artifactory-url: "${{ env.HELM_LOCAL_REPO_URL }}"
        registry-token: "${{ secrets.REGISTRY_TOKEN }}"
        vault-role-id: "${{ secrets.VAULT_APPROLE_ROLEID }}"
        vault-secret-id: "${{ secrets.VAULT_APPROLE_SECRETID }}"
    - name: Setup and Install Helm Charts for CTC
      if: steps.check-target-env.outputs.dual_region == 'true'
      uses: ./.github/templates/helm-setup-and-install
      with:
        kube-context: "${{ secrets.KUBE_CONTEXT_CTC }}"
        datacenter: ctc
        target-env: "${{ inputs.target-env }}"
        k8s-namespace: "${{ vars.K8S_NAMESPACE }}"
        release-name: "${{ inputs.release-name }}"
        image-tag: "${{ inputs.image-tag }}"
        chart-version: "${{ inputs.chart-version }}"
        artifactory-url: "${{ env.HELM_LOCAL_REPO_URL }}"
        registry-token: "${{ secrets.REGISTRY_TOKEN }}"
        vault-role-id: "${{ secrets.VAULT_APPROLE_ROLEID }}"
        vault-secret-id: "${{ secrets.VAULT_APPROLE_SECRETID }}"
