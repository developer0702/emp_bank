package com.optum.ftps.ob.core.employer.details.controller;

import com.optum.ftps.ob.core.employer.details.api.v1.AccountDetailsApi;
import com.optum.ftps.ob.core.employer.details.model.v1.AccountDetailsESBResponse;
import com.optum.ftps.ob.core.employer.details.model.v1.AccountDetailsRequest;
import com.optum.ftps.ob.core.employer.details.service.AccountDetailsEsbService;

import jakarta.validation.Valid;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@Slf4j
@RestController
@RequiredArgsConstructor
public class AccountDetailsEsbController implements AccountDetailsApi {

    private final AccountDetailsEsbService accountDetailsEsbService;

    @Override
    public ResponseEntity<AccountDetailsESBResponse> getAccountDetails(
            @Valid @RequestBody AccountDetailsRequest request) {
        log.info("getAccountDetails: request={}", request);

        if (accountDetailsEsbService.getAccountDetails(request) != null) {
            return new ResponseEntity<>(
                    accountDetailsEsbService.getAccountDetails(request), HttpStatus.OK);
        }
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
    }
    /* @Override
    public ResponseEntity<AccountDetailsESBResponse> getAccountDetailsESBResponseResponseEntity(
            @Valid @RequestBody AccountDetailsRequest request) {
        log.info("getAccountDetails: request={}", request);

        if (accountDetailsEsbService.getAccountDetails(request) != null) {
            return new ResponseEntity<>(
                    accountDetailsEsbService.getAccountDetails(request), HttpStatus.OK);
        }
        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
    }*/
}
