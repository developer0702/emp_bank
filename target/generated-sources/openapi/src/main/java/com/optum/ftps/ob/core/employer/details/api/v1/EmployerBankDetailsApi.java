/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.optum.ftps.ob.core.employer.details.api.v1;

import com.optum.ftps.ob.core.employer.details.exceptions.model.ErrorResponse;
import com.optum.ftps.ob.core.employer.details.model.v1.UpdateEmpBankDetailsRequest;
import com.optum.ftps.ob.core.employer.details.model.v1.UpdateEmpBankDetailsResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-02-16T10:35:46.195443200+05:30[Asia/Calcutta]")
@Validated
@Tag(name = "EmployerBankDetails", description = "the EmployerBankDetails API")
public interface EmployerBankDetailsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /addEmployerBankAccountDetails : Add employer bank details based on group Id
     *
     * @param updateEmpBankDetailsRequest  (required)
     * @return Update Employer Bank Details Updated response (status code 200)
     *         or Invalid element on request. (status code 400)
     *         or Resource not found. (status code 404)
     *         or Server failed to process the request. (status code 500)
     *         or Unexpected error. (status code 503)
     */
    @Operation(
        operationId = "addEmployerBankAccountDetails",
        summary = "Add employer bank details based on group Id",
        tags = { "EmployerBankDetails" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Update Employer Bank Details Updated response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = UpdateEmpBankDetailsResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid element on request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "404", description = "Resource not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "500", description = "Server failed to process the request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "503", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/addEmployerBankAccountDetails",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<UpdateEmpBankDetailsResponse> addEmployerBankAccountDetails(
        @Parameter(name = "UpdateEmpBankDetailsRequest", description = "", required = true) @Valid @RequestBody UpdateEmpBankDetailsRequest updateEmpBankDetailsRequest
    ) throws Exception {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"requestId\" : \"requestId\", \"message\" : \"message\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /updEmployerBankDetails : Update employer bank details based on group Id
     *
     * @param updateEmpBankDetailsRequest  (required)
     * @return Update Employer Bank Details Updated response (status code 200)
     *         or Invalid element on request. (status code 400)
     *         or Resource not found. (status code 404)
     *         or Server failed to process the request. (status code 500)
     *         or Unexpected error. (status code 503)
     */
    @Operation(
        operationId = "updEmployerBankDetails",
        summary = "Update employer bank details based on group Id",
        tags = { "EmployerBankDetails" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Update Employer Bank Details Updated response", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = UpdateEmpBankDetailsResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "Invalid element on request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "404", description = "Resource not found.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "500", description = "Server failed to process the request.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            }),
            @ApiResponse(responseCode = "503", description = "Unexpected error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/updEmployerBankDetails",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<UpdateEmpBankDetailsResponse> updEmployerBankDetails(
        @Parameter(name = "UpdateEmpBankDetailsRequest", description = "", required = true) @Valid @RequestBody UpdateEmpBankDetailsRequest updateEmpBankDetailsRequest
    ) throws Exception {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"requestId\" : \"requestId\", \"message\" : \"message\", \"status\" : \"status\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"errors\" : [ { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" }, { \"severity\" : \"ERR\", \"statusDescription\" : \"INCORRECT INPUT FORMAT\", \"statusCode\" : \"2\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
